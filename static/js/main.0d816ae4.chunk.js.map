{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","aboutText","htmlFor","onClick","toggleMode","style","getStyle","modeName","placeholder","TextForm","useState","text","setText","heading","value","rows","onChange","event","target","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","length","defaultProps","App","setMode","setmodeName","color","styleName","setstyleName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0d816ae4.chunk.js","sourcesContent":["import React from \"react\";\r\n//impt= import proptypes\r\nimport PropTypes from \"prop-types\";\r\n\r\n//rfc=react functional component\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item active\">\r\n              <a className=\"nav-link\" href=\"/\">\r\n                Home <span className=\"sr-only\">(current)</span>\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n\r\n          <div className=\"custom-control custom-switch mx-3\">\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"custom-control-input\"\r\n              id=\"customSwitch1\"\r\n            />\r\n            <label\r\n              className=\"custom-control-label\"\r\n              htmlFor=\"customSwitch1\"\r\n              onClick={props.toggleMode}\r\n              style={props.getStyle}\r\n            >\r\n              {props.modeName}\r\n            </label>\r\n          </div>\r\n          <form className=\"form-inline my-2 my-lg-0\">\r\n            <input\r\n              className=\"form-control mr-sm-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button\r\n              className=\"btn btn-outline-success my-2 my-sm-0\"\r\n              type=\"submit\"\r\n            >\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\n//pts=PropTypes.string\r\n//used to set a types of props\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\n//default props\r\nNavbar.defaultProps = { title: \"hai\", aboutText: \"whatsapp\" };\r\n","import React, { useState } from \"react\";\r\n//usestate= hook\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n  const handleUpClick = () => {\r\n    //console.log(\"button clicked\");\r\n    setText(text.toUpperCase());\r\n  };\r\n\r\n  const handleLoClick = () => {\r\n    //console.log(\"button clicked\");\r\n    setText(text.toLowerCase());\r\n  };\r\n\r\n  const handleClrTxt = () => {\r\n    //console.log(\"button clicked\");\r\n    setText(\"\");\r\n  };\r\n\r\n  const handleCpyTxt = () => {\r\n    const text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    //console.log(\"text changed\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2>{props.heading}</h2>\r\n      <div className=\"container\">\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"myBox\"\r\n            value={text}\r\n            placeholder=\"Enter your text here\"\r\n            rows=\"8\"\r\n            onChange={handleOnChange}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-success mx-3\" onClick={handleUpClick}>\r\n          Convert to UpperCase\r\n        </button>\r\n        <button className=\"btn btn-success mx-3\" onClick={handleLoClick}>\r\n          Convert to LowerCase\r\n        </button>\r\n        <button className=\"btn btn-success mx-3\" onClick={handleClrTxt}>\r\n          Clear text\r\n        </button>\r\n\r\n        <button className=\"btn btn-success mx-3\" onClick={handleCpyTxt}>\r\n          Copy text\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-3\">\r\n        <h2>Your Text Summary:</h2>\r\n        <p>\r\n          No of Words are:{text.split(\" \").length} and no of characters are:\r\n          {text.length}\r\n        </p>\r\n      </div>\r\n      <div className=\"container my-3\">\r\n        <h3>PREVIEW</h3>\r\n        <p>\r\n          {text.length > 0 ? text : \"enter something in the textbox to preview\"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","//import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [modeName, setmodeName] = useState(\"Dark Mode\");\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setmodeName(\"Light Mode\");\n      setMode(\"dark\");\n      setstyleName({\n        color: \"white\",\n      });\n    } else {\n      setMode(\"light\");\n      setmodeName(\"Dark Mode\");\n      setstyleName({\n        color: \"black\",\n      });\n    }\n  };\n  const [styleName, setstyleName] = useState({\n    color: \"black\",\n  });\n\n  return (\n    <>\n      <Navbar\n        title=\"TextUtils\"\n        aboutText=\"about\"\n        mode={mode}\n        toggleMode={toggleMode}\n        modeName={modeName}\n        getStyle={styleName}\n      />\n      <div className=\"container my-3\">\n        <TextForm heading=\"Enter Yout Text Here\" />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}